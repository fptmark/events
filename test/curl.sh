#!/bin/bash
# Generated curl commands from comprehensive test execution
# Auto-generated by data generation tool

# Function to execute a URL and output structured JSON
execute_url() {
    local method="$1"
    local url="$2"
    local description="$3"
    local category="$4"

    # Execute curl and capture full response with status
    local full_response=$(curl -s -w "\nSTATUS:%{http_code}" -X "$method" "$url")
    local response_body=$(echo "$full_response" | sed '$d')  # Remove last line (status)
    local status=$(echo "$full_response" | tail -n 1 | sed 's/STATUS://')  # Extract status code
    local timestamp=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")

    # Output as key-value pair with URL as key
    local url_path=$(echo "$url" | sed 's|^http[s]*://[^/]*||')
    echo "  \"$url_path\": {"
    echo "    \"method\": \"$method\","
    echo "    \"description\": \"$description\","
    echo "    \"category\": \"$category\","
    echo "    \"status\": $((status)),"
    echo "    \"timestamp\": \"$timestamp\","

    # Check if response_body is valid JSON, if not quote it as string
    if echo "$response_body" | python3 -c "import sys,json; json.load(sys.stdin)" 2>/dev/null; then
        echo "    \"response\": $response_body"
    else
        # Escape quotes and wrap in JSON string
        local escaped_response=$(echo "$response_body" | sed 's/"/\\"/g')
        echo "    \"response\": \"$escaped_response\""
    fi
    echo "  },"
}

# Wrap all output in object braces and fix trailing comma
(
echo "{"

# ========== Basic API Tests ==========
execute_url "GET" "http://localhost:5500/api/User/basic_valid_001" "Get valid user" "basic"
execute_url "GET" "http://localhost:5500/api/User/basic_invalid_enum_001" "Get user with bad enum" "basic"
execute_url "GET" "http://localhost:5500/api/User/basic_invalid_currency_001" "Get user with bad currency" "basic"
execute_url "GET" "http://localhost:5500/api/User/basic_missing_required_001" "Get user with missing required fields" "basic"
execute_url "GET" "http://localhost:5500/api/User/nonexistent_user_123456" "Get non-existent user" "basic"
execute_url "GET" "http://localhost:5500/api/User" "Get user list" "basic"
execute_url "GET" "http://localhost:5500/api/user" "Get user list (lowercase entity)" "basic"
execute_url "GET" "http://localhost:5500/api/User?pageSize=3" "Get user list with page size" "basic"
# ========== View Parameter Tests ==========
execute_url "GET" "http://localhost:5500/api/User/view_valid_fk_001?view=account(id)" "Get valid user with account ID view" "view"
execute_url "GET" "http://localhost:5500/api/User/view_valid_fk_001?view=account(id,name,createdAt)" "Get valid user with full account view" "view"
execute_url "GET" "http://localhost:5500/api/User/view_valid_fk_002?view=account(id,name)" "Get valid user with different account view" "view"
execute_url "GET" "http://localhost:5500/api/User/view_expired_fk_001?view=account(id)" "Get user with expired account FK" "view"
execute_url "GET" "http://localhost:5500/api/User/view_missing_fk_001?view=account(id)" "Get user with missing account FK" "view"
execute_url "GET" "http://localhost:5500/api/User/view_null_fk_001?view=account(id)" "Get user with null account FK" "view"
execute_url "GET" "http://localhost:5500/api/User/view_valid_fk_001?view=account(nonexistent_field)" "Get valid user with invalid view field" "view"
execute_url "GET" "http://localhost:5500/api/User/view_valid_fk_001?view=badentity(id)" "Get valid user with bad view entity" "view"
execute_url "GET" "http://localhost:5500/api/User?view=account(id)" "Get user list with account ID view" "view"
execute_url "GET" "http://localhost:5500/api/User?view=account(id,name,createdAt)" "Get user list with full account view" "view"
execute_url "GET" "http://localhost:5500/api/User?view=badentity(id)" "Get user list with bad entity view" "view"
execute_url "GET" "http://localhost:5500/api/User?view=account(id,badfield)" "Get user list with bad account field" "view"
execute_url "GET" "http://localhost:5500/api/User?pageSize=3&view=account(id)" "Get user list with pagination and view" "view"
# ========== Individual User + View Edge Cases ==========
execute_url "GET" "http://localhost:5500/api/User/basic_valid_001?view=account(createdAt,expiredAt)" "Individual user with extended view" "view_individual"
execute_url "GET" "http://localhost:5500/api/User/view_expired_fk_001?view=account(id,createdAt)" "User with bad FK + extended view" "view_individual"
execute_url "GET" "http://localhost:5500/api/User/nonexistent_user_123456?view=account(id)" "Non-existent user with view" "view_individual"
execute_url "GET" "http://localhost:5500/api/User/basic_valid_001?view=badentity(id)" "Individual user with bad view entity" "view_individual"
execute_url "GET" "http://localhost:5500/api/User/basic_invalid_enum_001?view=account(createdAt,expiredAt)" "User with errors + extended view" "view_individual"
# ========== View + Parameter Combinations ==========
execute_url "GET" "http://localhost:5500/api/User?view=account(id)&sort=firstName" "View with sort" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id,createdAt)&sort=netWorth:desc" "View with desc sort" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id)&filter=gender:male" "View with filter" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id)&filter=netWorth:gte:50000" "View with range filter" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id)&sort=firstName&filter=gender:female" "View with sort and filter" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id)&sort=dob:desc&filter=isAccountOwner:true" "View with desc sort and boolean filter" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id)&sort=firstName&filter=gender:male&pageSize=3" "All parameters: view + sort + filter + pagination" "view_combo"
execute_url "GET" "http://localhost:5500/api/User?view=account(id,createdAt)&sort=dob:desc,firstName&filter=isAccountOwner:true,netWorth:gte:0&page=1&pageSize=2" "Complex all parameters" "view_combo"
# ========== Pagination Tests ==========
execute_url "GET" "http://localhost:5500/api/User" "Get user list with default pagination" "page"
execute_url "GET" "http://localhost:5500/api/User?pageSize=5" "Get user list with page size 5" "page"
execute_url "GET" "http://localhost:5500/api/User?page=1&pageSize=5" "Get user list page 1 with size 5" "page"
execute_url "GET" "http://localhost:5500/api/User?page=2&pageSize=5" "Get user list page 2 with size 5" "page"
execute_url "GET" "http://localhost:5500/api/User?page=3&pageSize=5" "Get user list page 3 with size 5" "page"
execute_url "GET" "http://localhost:5500/api/User?pageSize=20" "Get user list with large page size" "page"
execute_url "GET" "http://localhost:5500/api/User?page=1&pageSize=10" "Get user list page 1 with size 10" "page"
execute_url "GET" "http://localhost:5500/api/User?page=2&pageSize=10" "Get user list page 2 with size 10" "page"
execute_url "GET" "http://localhost:5500/api/User?page=100&pageSize=5" "Get user list beyond available pages" "page"
execute_url "GET" "http://localhost:5500/api/User/page_user_001?page=2&pageSize=10" "Get individual user with pagination params" "page"
# ========== Filtering Tests ==========
execute_url "GET" "http://localhost:5500/api/User?filter=username:valid_all_user" "Filter by username (contains match)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=firstName:Valid" "Filter by firstName (contains 'Valid')" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=lastName:User" "Filter by lastName (contains 'User')" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=email:valid_all@test.com" "Filter by email (contains match)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=isAccountOwner:true" "Filter by isAccountOwner true" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=isAccountOwner:false" "Filter by isAccountOwner false" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:male" "Filter by gender male" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:female" "Filter by gender female" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:invalid_gender" "Filter by invalid gender (edge case)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:50000.0" "Filter by netWorth exact match" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:75000.0" "Filter by different netWorth value" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:-5000.0" "Filter by negative netWorth" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:gte:50000" "Filter by netWorth greater than or equal 50k" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:lt:0" "Filter by negative netWorth using comparison" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:1985-06-15" "Filter by exact date of birth" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:1992-03-20" "Filter by non-existant dob" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:gte:1950-01-01" "Filter by dob greater than or equal 1950 (broader range)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:lte:2050-12-31" "Filter by dob less than or equal 2050 (broader range)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:gt:1950-01-01" "Filter by dob greater than 1950 (broader range)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:lt:2050-01-01" "Filter by dob less than 2050 (broader range)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:gte:1950-01-01,dob:lte:2050-12-31" "Filter by dob range 1950-2050 (broader)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:gte:-10000,netWorth:lte:100000" "Filter by netWorth range (including negatives)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:male,isAccountOwner:true" "Filter by gender and account owner" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:female,netWorth:75000.0" "Filter by gender and netWorth" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=isAccountOwner:true,dob:gte:1960-01-01" "Filter by boolean and date range" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=firstName:Valid,lastName:User,gender:male" "Filter by multiple strings and enum" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:female,netWorth:gte:70000,isAccountOwner:false" "Filter by enum, currency range, and boolean" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:gte:1950-01-01,dob:lt:2000-01-01,gender:male" "Filter by broader date range and gender" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:gte:-10000,isAccountOwner:true,gender:male" "Filter by netWorth (including negatives), account owner, and gender" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=firstName:NonExistent" "Filter by non-existent value" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=netWorth:0" "Filter by zero netWorth" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:2050-01-01" "Filter by future date (no matches)" "filter"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:male,gender:female" "Filter by contradictory values (edge case)" "filter"
execute_url "GET" "http://localhost:5500/api/User/basic_valid_001?filter=gender:male" "Get individual user with filter parameter" "filter"
# ========== Sorting Tests ==========
execute_url "GET" "http://localhost:5500/api/User?sort=username" "Sort by username ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=username:desc" "Sort by username descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName" "Sort by firstName ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName:desc" "Sort by firstName descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=lastName" "Sort by lastName ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=lastName:desc" "Sort by lastName descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=email" "Sort by email ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=email:desc" "Sort by email descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=netWorth" "Sort by netWorth ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=netWorth:desc" "Sort by netWorth descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=dob" "Sort by date of birth ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=dob:desc" "Sort by date of birth descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=createdAt" "Sort by createdAt ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=createdAt:desc" "Sort by createdAt descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=isAccountOwner" "Sort by isAccountOwner ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=isAccountOwner:desc" "Sort by isAccountOwner descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=gender" "Sort by gender ascending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=gender:desc" "Sort by gender descending" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName,lastName" "Sort by firstName then lastName (both asc)" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName:desc,lastName" "Sort by firstName desc then lastName asc" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName,lastName:desc" "Sort by firstName asc then lastName desc" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName:desc,lastName:desc" "Sort by firstName desc then lastName desc" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=dob,netWorth" "Sort by date then currency (both asc)" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=dob:desc,netWorth" "Sort by date desc then currency asc" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=gender,firstName,netWorth" "Sort by enum, string, then currency" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=isAccountOwner,dob:desc,firstName" "Sort by boolean, date desc, then string" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=dob,updatedAt" "Sort by dob + auto date fields" "sort"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName,firstName" "Sort by same field twice (edge case)" "sort"
execute_url "GET" "http://localhost:5500/api/User/sort_alpha_001?sort=username" "Get individual user with sort parameter" "sort"
# ========== Lowercase Parameter Tests ==========
execute_url "GET" "http://localhost:5500/api/User?pagesize=5" "pagesize parameter" "case"
execute_url "GET" "http://localhost:5500/api/User?page=1&pagesize=3" "pagesize with page" "case"
execute_url "GET" "http://localhost:5500/api/User?sort=firstname" "Sort by firstname" "case"
execute_url "GET" "http://localhost:5500/api/User?sort=lastname,createdat:desc" "Sort by multiple fields" "case"
execute_url "GET" "http://localhost:5500/api/User?sort=isaccountowner,firstname" "Sort by boolean and string" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:female" "Filter by gender field" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=firstname:test" "Filter by firstname" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=isaccountowner:true" "Filter by boolean field" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=networth:gte:1000" "Filter networth greater than or equal" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=networth:gt:1000" "Filter networth greater than" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=networth:lt:100000" "Filter networth less than" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=networth:lte:100000" "Filter networth less than or equal" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:gte:1990-01-01" "Filter date of birth greater than or equal" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:lt:2000-01-01" "Filter date of birth less than" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=createdat:gte:2023-01-01" "Filter created date greater than or equal" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=createdat:lt:2024-01-01" "Filter created date less than" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=updatedat:gt:2023-06-01" "Filter updated date greater than" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=updatedat:lte:2024-12-31" "Filter updated date less than or equal" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=networth:gte:1000,networth:lt:100000" "Filter networth range" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=dob:gte:1985-01-01,dob:lt:1995-12-31" "Filter date range" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=networth:gte:1000,dob:lt:2000-01-01" "Filter networth and date" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:female" "Filter with lowercase value" "case"
execute_url "GET" "http://localhost:5500/api/User?filter=email:test@example.com" "Filter email with lowercase" "case"
execute_url "GET" "http://localhost:5500/api/User?Page=1&PageSize=5" "Mixed case Page and PageSize" "case"
execute_url "GET" "http://localhost:5500/api/User?PAGE=2&pageSIZE=10" "Uppercase PAGE and mixed pageSIZE" "case"
execute_url "GET" "http://localhost:5500/api/User?Sort=firstName&Filter=gender:female" "Mixed case Sort and Filter" "case"
execute_url "GET" "http://localhost:5500/api/User?SORT=lastName,-dob&FILTER=networth:gte:1000" "Uppercase SORT and FILTER" "case"
execute_url "GET" "http://localhost:5500/api/User?Page=1&PageSize=3&Sort=netWorth&Filter=gender:female" "All mixed case parameters" "case"
execute_url "GET" "http://localhost:5500/api/User?page=1&pagesize=5&sort=firstname&filter=gender:female" "Combined parameters" "case"
execute_url "GET" "http://localhost:5500/api/User?sort=lastname,dob:desc&filter=isaccountowner:true,gender:female" "Complex combination" "case"
execute_url "GET" "http://localhost:5500/api/User?page=2&pagesize=10&sort=networth&filter=dob:gte:1990-01-01" "Complex pagination with ranges" "case"
# ========== Invalid Field Tests ==========
execute_url "GET" "http://localhost:5500/api/User?sort=invalidField" "Sort by invalid field name" "invalid"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName,badField" "Sort by valid and invalid fields" "invalid"
execute_url "GET" "http://localhost:5500/api/User?filter=nonExistentField:test" "Filter by invalid field name" "invalid"
execute_url "GET" "http://localhost:5500/api/User?filter=gender:male,invalidField:value" "Filter by valid and invalid fields" "invalid"
execute_url "GET" "http://localhost:5500/api/User?sort=badSort&filter=badFilter:value" "Sort and filter with invalid fields" "invalid"
execute_url "GET" "http://localhost:5500/api/User?sort=firstName,invalidField&filter=gender:female,badField:test" "Mixed valid and invalid sort/filter" "invalid"
# ========== Mixed Case Field Names ==========
execute_url "GET" "http://localhost:5500/api/User?sort=FirstName" "Mixed case field in sort" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?sort=LASTNAME:desc" "Uppercase field in sort" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?sort=NetWorth,FirstName:desc" "Mixed case multiple sort fields" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?filter=FirstName:Valid" "Mixed case field in filter" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?filter=GENDER:male" "Uppercase field in filter" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?filter=IsAccountOwner:true,NetWorth:gte:50000" "Mixed case multiple filter fields" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?view=Account(ID,CreatedAt)" "Mixed case entity and fields in view" "mixed_case"
execute_url "GET" "http://localhost:5500/api/User?view=ACCOUNT(id,CREATEDAT)" "Uppercase entity and fields in view" "mixed_case"

# Close JSON object (remove trailing comma and add closing brace)
) | sed '$s/,$/}/'
