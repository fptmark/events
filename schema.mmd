erDiagram
%% @dictionary pattern { email: "^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$", url: "^https?://[^\s]+$" }
    BaseEntity {
        ObjectId _id
        ISODate createdAt
        ISODate updatedAt
   
    %% @validate _id: { required: true, autoGenerate: true }
    %% @validate createdAt: { required: true, autoGenerate: true }
    %% @validate updatedAt: { required: true, autoUpdate: true }
    }

    Account {
        ISODate expiredAt
    
    %% @inherit BaseEntity
    %% @validate expiredAt: { required: false }
    }

    User {
        ObjectId accountId
        String username
        String email
        String password
        String firstName
        String lastName
        String gender
        Boolean isAccountOwner
    
    %% @inherit BaseEntity
    %% @validate accountId: { required: true }
    %% @validate username: { required: true, minLength: 3, maxLength: 50 }
    %% @validate email: { required: true, minLength: 8, maxLength: 50, pattern: dict=pattern.email, pattern.message: "Bad email address format" }
    %% @validate password: { required: true, minLength: 8 }
    %% @validate firstName: { required: true, minLenght: 3, maxLength: 100 }
    %% @validate lastName: { required: true, minLenght: 3, maxLength: 100 }
    %% @validate gender: { required: false, enum: [male, female, other], enum.message: "must be male or female" }
    %% @validate isAccountOwner: { required: true }
    %% @unique username
    %% @unique email
    }

    Profile {
        ObjectId userId
        String name
        JSON preferences
        Integer radiusMiles
    
    %% @inherit BaseEntity
    %% @validate userId: { required: true }
    %% @validate name: { required: true, maxLength: 100 }
    %% @validate preferences: { required: false }
    %% @validate radiusMiles: { required: false, min: 0 }
    %% @unique name + userId
    }

    TagAffinity {
        ObjectId profileId
        String tag
        Integer affinity
    
    %% @inherit BaseEntity
    %% @validate profileId: { required: true }
    %% @validate tag: { required: true, maxLength: 50 }
    %% @validate affinity: { required: true, min: -100, max: 100 }
    %% @unique profileId + tag
    }

    Event {
        String url
        String title
        ISODate dateTime
        String location
        Number cost
        Integer numOfExpectedAttendees
        String recurrence
        Array[String] tags
    
    %% @inherit BaseEntity
    %% @validate url: { required: true, pattern: dict=pattern.url, pattern.message: "Bad URL format" }
    %% @validate title: { required: true, maxLength: 200 }
    %% @validate dateTime: { required: true }
    %% @validate location: { required: false, maxLength: 200 }
    %% @validate cost: { required: false, min: 0 }
    %% @validate numOfExpectedAttendees: { required: false, min: 0 }
    %% @validate recurrence: { required: false, enum: [daily, weekly, monthly, yearly] }
    %% @validate tags: { required: false }
    }

    UserEvent {
        ObjectId userId
        ObjectId eventId
        Boolean attended
        Integer rating
        String note
    
    %% @inherit BaseEntity
    %% @validate userId: { required: true }
    %% @validate eventId: { required: true }
    %% @validate attended: { required: false }
    %% @validate rating: { required: false, min: 1, max: 5 }
    %% @validate note: { required: false, maxLength: 500 }
    }

    Url {
        String url
        JSON params
    
    %% @inherit BaseEntity
    %% @validate url: { required: true, pattern: dict=pattern.url, pattern.message: "Bad URL format" }
    %% @validate params: { required: false }
    }

    Crawl {
        ObjectId urlId
        ISODate lastParsedDate
        JSON parseStatus
        Array[String] errorsEncountered
    
    %% @inherit BaseEntity
    %% @validate urlId: { required: true }
    %% @validate lastParsedDate: { required: false }
    %% @validate parseStatus: { required: false }
    %% @validate errorsEncountered: { required: false }
    }

    Account ||--o{ User: ""
    User ||--o{ Profile: ""
    Profile ||--o{ TagAffinity: ""
    User ||--o{ UserEvent: ""
    Event ||--o{ UserEvent: ""
    Url ||--o{ Crawl: ""
