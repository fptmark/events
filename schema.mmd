erDiagram
    BaseEntity {
        ObjectId _id
        ISODate createdAt
        ISODate updatedAt
    }
    %% @validation BaseEntity
    %% _id { type ObjectId, required true, autoGenerate true }
    %% createdAt { type ISODate, required true, autoGenerate true }
    %% updatedAt { type ISODate, required true, autoUpdate true }

    Account {
        ISODate expiredAt
    }
    %% @inherits BaseEntity
    %% @validation Account
    %% expiredAt: { type: ISODate, required: false }

    User {
        ObjectId accountId
        String username
        String email
        String password
        String firstName
        String lastName
        String gender
        Boolean isAccountOwner
    }
    %% @inherits BaseEntity
    %% @validation User
    %% accountId: { type: ObjectId, required: true }
    %% username: { type: String, required: true, minLength: 3, maxLength: 50 }
    %% email { type String, required true, minLength 8, maxLength 50, pattern ^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ }
    %% password: { type: String, required: true, minLength: 8 }
    %% firstName: { type: String, required: true, maxLength: 100 }
    %% lastName: { type: String, required: true, maxLength: 100 }
    %% gender { type String, required false, enum [male, female, other] }
    %% isAccountOwner: { type: Boolean, required: true }

    Profile {
        ObjectId userId
        String name
        JSON preferences
        Integer radiusMiles
    }
    %% @inherits BaseEntity
    %% @validation Profile
    %% userId: { type: ObjectId, required: true }
    %% name: { type: String, required: true, maxLength: 100 }
    %% preferences: { type: JSON, required: false }
    %% radiusMiles: { type: Integer, required: false, min: 0 }

    TagAffinity {
        ObjectId profileId
        String tag
        Integer affinity
    }
    %% @inherits BaseEntity
    %% @validation TagAffinity
    %% profileId: { type: ObjectId, required: true }
    %% tag: { type: String, required: true, maxLength: 50 }
    %% affinity: { type: Integer, required: true, min: -100, max: 100 }

    Event {
        String url
        String title
        ISODate dateTime
        String location
        Number cost
        Integer numOfExpectedAttendees
        String recurrence
        Array[String] tags
    }
    %% @inherits BaseEntity
    %% @validation Event
    %% url: { type: String, required: true, pattern: ^https?://[^\s]+$ }
    %% title: { type: String, required: true, maxLength: 200 }
    %% dateTime: { type: ISODate, required: true }
    %% location: { type: String, required: false, maxLength: 200 }
    %% cost: { type: Number, required: false, min: 0 }
    %% numOfExpectedAttendees: { type: Integer, required: false, min: 0 }
    %% recurrence: { type: String, required: false, enum: [daily, weekly, monthly, yearly] }
    %% tags: { type: Array[String], required: false }

    UserEvent {
        ObjectId userId
        ObjectId eventId
        Boolean attended
        Integer rating
        String note
    }
    %% @inherits BaseEntity
    %% @validation UserEvent
    %% userId: { type: ObjectId, required: true }
    %% eventId: { type: ObjectId, required: true }
    %% attended: { type: Boolean, required: false }
    %% rating: { type: Integer, required: false, min: 1, max: 5 }
    %% note: { type: String, required: false, maxLength: 500 }

    Url {
        String url
        JSON params
    }
    %% @inherits BaseEntity
    %% @validation Url
    %% url: { type: String, required: true, pattern: ^https?://[^\s]+$ }
    %% params: { type: JSON, required: false }

    Crawl {
        ObjectId urlId
        ISODate lastParsedDate
        JSON parseStatus
        Array[String] errorsEncountered
    }
    %% @inherits BaseEntity
    %% @validation Crawl
    %% urlId: { type: ObjectId, required: true }
    %% lastParsedDate: { type: ISODate, required: false }
    %% parseStatus: { type: JSON, required: false }
    %% errorsEncountered: { type: Array[String], required: false }

    Account ||--o{ User: ""
    User ||--o{ Profile: ""
    Profile ||--o{ TagAffinity: ""
    User ||--o{ UserEvent: ""
    Event ||--o{ UserEvent: ""
    Url ||--o{ Crawl: ""
