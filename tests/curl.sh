#!/bin/bash
# Generated curl commands from comprehensive test execution
# Auto-generated by --curl mode

# Function to execute a URL and output structured JSON
execute_url() {
    local method="$1"
    local url="$2" 
    local description="$3"
    
    # Execute curl and capture full response with status
    local full_response=$(curl -s -w "\nSTATUS:%{http_code}" -X "$method" "$url")
    local response_body=$(echo "$full_response" | sed '$d')  # Remove last line (status)
    local status=$(echo "$full_response" | tail -n 1 | sed 's/STATUS://')  # Extract status code
    local timestamp=$(date -u +"%Y-%m-%dT%H:%M:%S.%3NZ")
    
    # Output structured result with full response
    echo "{"
    echo "  \"method\": \"$method\","
    local url_path=$(echo "$url" | sed 's|^http[s]*://[^/]*||')
    echo "  \"url\": \"$url_path\","
    echo "  \"description\": \"$description\","
    echo "  \"status\": $status,"
    echo "  \"timestamp\": \"$timestamp\","
    echo "  \"response\": $response_body"
    echo "},"
}

# ========== Basic API Tests ==========
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456" "Get Valid user"
execute_url "GET" "http://localhost:5500/api/user/bad_enum_user_123456" "Get user with bad enum"
execute_url "GET" "http://localhost:5500/api/user/bad_currency_user_123456" "Get user with bad currency"
execute_url "GET" "http://localhost:5500/api/user/bad_fk_user_123456" "Get user with bad FK"
execute_url "GET" "http://localhost:5500/api/user/multiple_errors_user_123456" "Get user with multiple errors"
execute_url "GET" "http://localhost:5500/api/user/nonexistent_user_123456" "Get non-existent user"
execute_url "GET" "http://localhost:5500/api/user" "Get user list"
execute_url "GET" "http://localhost:5500/api/user?pageSize=3" "Get user list with page size"
# ========== View Parameter Tests ==========
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D" "Get valid user with account ID view"
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22id%22%2C%22createdAt%22%2C%22expiredAt%22%5D%7D" "Get valid user with full account view"
execute_url "GET" "http://localhost:5500/api/user/bad_fk_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D" "Get user with bad FK and account view"
execute_url "GET" "http://localhost:5500/api/user/multiple_errors_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D" "Get user with multiple errors and account view"
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22nonexistent_field%22%5D%7D" "Get valid user with invalid view field"
execute_url "GET" "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%5D%7D" "Get user list with account ID view"
execute_url "GET" "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%2C%22createdAt%22%2C%22expiredAt%22%5D%7D" "Get user list with full account view"
execute_url "GET" "http://localhost:5500/api/user?pageSize=3&view=%7B%22account%22%3A%5B%22id%22%5D%7D" "Get user list with pagination and view"
# ========== Pagination Tests ==========
execute_url "GET" "http://localhost:5500/api/user" "Get user list with default pagination"
execute_url "GET" "http://localhost:5500/api/user?pageSize=3" "Get user list with page size 3"
execute_url "GET" "http://localhost:5500/api/user?page=1&pageSize=5" "Get user list page 1 with size 5"
execute_url "GET" "http://localhost:5500/api/user?page=2&pageSize=3" "Get user list page 2 with size 3"
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456" "Get individual user (no pagination)"
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456?page=2&pageSize=10" "Get individual user with pagination params"
# ========== Sorting Tests ==========
execute_url "GET" "http://localhost:5500/api/user?sort=username" "Get user list sorted by username ascending"
execute_url "GET" "http://localhost:5500/api/user?sort=-username" "Get user list sorted by username descending"
execute_url "GET" "http://localhost:5500/api/user?sort=createdAt" "Get user list sorted by createdAt ascending"
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456?sort=username" "Get individual user with sort parameter"
# ========== Filtering Tests ==========
execute_url "GET" "http://localhost:5500/api/user?filter=gender:male" "Get user list filtered by gender male"
execute_url "GET" "http://localhost:5500/api/user?filter=isAccountOwner:true" "Get user list filtered by isAccountOwner true"
execute_url "GET" "http://localhost:5500/api/user?filter=gender:male,isAccountOwner:true" "Get user list with multiple filters"
execute_url "GET" "http://localhost:5500/api/user/valid_all_user_123456?filter=gender:male" "Get individual user with filter parameter"
# ========== Combination Tests ==========
execute_url "GET" "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%5D%7D&pageSize=3" "Get user list with view and page size"
execute_url "GET" "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%5D%7D&sort=username" "Get user list with view and sorting"
execute_url "GET" "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%5D%7D&filter=isAccountOwner:true" "Get user list with view and filtering"
execute_url "GET" "http://localhost:5500/api/user?sort=username&pageSize=3&filter=gender:male" "Get user list with sorting, pagination and filtering"
