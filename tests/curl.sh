#!/bin/bash
# Config used for this execution pass
echo "CONFIG_START"
cat "tests/temp_test_config.json"
echo "CONFIG_END"

# Generated curl commands from comprehensive test execution
# Auto-generated by --curl mode

# ========== Basic API Tests (curl_generation) ==========
# Get valid user
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456"
echo "CURL_END"

# Get user with bad enum
echo "=== GET http://localhost:5500/api/user/bad_enum_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/bad_enum_user_123456\n" -X GET "http://localhost:5500/api/user/bad_enum_user_123456"
echo "CURL_END"

# Get user with bad currency
echo "=== GET http://localhost:5500/api/user/bad_currency_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/bad_currency_user_123456\n" -X GET "http://localhost:5500/api/user/bad_currency_user_123456"
echo "CURL_END"

# Get user with bad FK
echo "=== GET http://localhost:5500/api/user/bad_fk_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/bad_fk_user_123456\n" -X GET "http://localhost:5500/api/user/bad_fk_user_123456"
echo "CURL_END"

# Get user with multiple errors
echo "=== GET http://localhost:5500/api/user/multiple_errors_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/multiple_errors_user_123456\n" -X GET "http://localhost:5500/api/user/multiple_errors_user_123456"
echo "CURL_END"

# Get non-existent user
echo "=== GET http://localhost:5500/api/user/nonexistent_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/nonexistent_user_123456\n" -X GET "http://localhost:5500/api/user/nonexistent_user_123456"
echo "CURL_END"

# Get user list
echo "=== GET http://localhost:5500/api/user ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user\n" -X GET "http://localhost:5500/api/user"
echo "CURL_END"

# Get user list with page size
echo "=== GET http://localhost:5500/api/user?pageSize=3 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?pageSize=3\n" -X GET "http://localhost:5500/api/user?pageSize=3"
echo "CURL_END"

# ========== View Parameter Tests (curl_generation) ==========
# Get valid user with account ID view
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456?view={"account":["id"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D"
echo "CURL_END"

# Get valid user with full account view
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456?view={"account":["id","createdAt","expiredAt"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22id%22%2C%22createdAt%22%2C%22expiredAt%22%5D%7D\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22id%22%2C%22createdAt%22%2C%22expiredAt%22%5D%7D"
echo "CURL_END"

# Get user with bad FK and account view
echo "=== GET http://localhost:5500/api/user/bad_fk_user_123456?view={"account":["id"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/bad_fk_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D\n" -X GET "http://localhost:5500/api/user/bad_fk_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D"
echo "CURL_END"

# Get user with multiple errors and account view
echo "=== GET http://localhost:5500/api/user/multiple_errors_user_123456?view={"account":["id"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/multiple_errors_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D\n" -X GET "http://localhost:5500/api/user/multiple_errors_user_123456?view=%7B%22account%22%3A%5B%22id%22%5D%7D"
echo "CURL_END"

# Get valid user with invalid view field
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456?view={"account":["nonexistent_field"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22nonexistent_field%22%5D%7D\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456?view=%7B%22account%22%3A%5B%22nonexistent_field%22%5D%7D"
echo "CURL_END"

# Get user list with account ID view
echo "=== GET http://localhost:5500/api/user?view={"account":["id"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%5D%7D\n" -X GET "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%5D%7D"
echo "CURL_END"

# Get user list with full account view
echo "=== GET http://localhost:5500/api/user?view={"account":["id","createdAt","expiredAt"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%2C%22createdAt%22%2C%22expiredAt%22%5D%7D\n" -X GET "http://localhost:5500/api/user?view=%7B%22account%22%3A%5B%22id%22%2C%22createdAt%22%2C%22expiredAt%22%5D%7D"
echo "CURL_END"

# Get user list with pagination and view
echo "=== GET http://localhost:5500/api/user?pageSize=3&view={"account":["id"]} ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?pageSize=3&view=%7B%22account%22%3A%5B%22id%22%5D%7D\n" -X GET "http://localhost:5500/api/user?pageSize=3&view=%7B%22account%22%3A%5B%22id%22%5D%7D"
echo "CURL_END"

# ========== Pagination Tests (curl_generation) ==========
# Get user list with default pagination
echo "=== GET http://localhost:5500/api/user ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user\n" -X GET "http://localhost:5500/api/user"
echo "CURL_END"

# Get user list with page size 3
echo "=== GET http://localhost:5500/api/user?pageSize=3 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?pageSize=3\n" -X GET "http://localhost:5500/api/user?pageSize=3"
echo "CURL_END"

# Get user list page 1 with size 5
echo "=== GET http://localhost:5500/api/user?page=1&pageSize=5 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?page=1&pageSize=5\n" -X GET "http://localhost:5500/api/user?page=1&pageSize=5"
echo "CURL_END"

# Get user list page 2 with size 3
echo "=== GET http://localhost:5500/api/user?page=2&pageSize=3 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?page=2&pageSize=3\n" -X GET "http://localhost:5500/api/user?page=2&pageSize=3"
echo "CURL_END"

# Get user list with page 0
echo "=== GET http://localhost:5500/api/user?page=0&pageSize=5 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?page=0&pageSize=5\n" -X GET "http://localhost:5500/api/user?page=0&pageSize=5"
echo "CURL_END"

# Get user list with large page size (framework test)
echo "=== GET http://localhost:5500/api/user?pageSize=100 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?pageSize=100\n" -X GET "http://localhost:5500/api/user?pageSize=100"
echo "CURL_END"

# Get user list with very large page size (works in browser)
echo "=== GET http://localhost:5500/api/user?pageSize=1000 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?pageSize=1000\n" -X GET "http://localhost:5500/api/user?pageSize=1000"
echo "CURL_END"

# Get user list beyond available pages
echo "=== GET http://localhost:5500/api/user?page=999&pageSize=5 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?page=999&pageSize=5\n" -X GET "http://localhost:5500/api/user?page=999&pageSize=5"
echo "CURL_END"

# Get user list with zero page size
echo "=== GET http://localhost:5500/api/user?pageSize=0 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?pageSize=0\n" -X GET "http://localhost:5500/api/user?pageSize=0"
echo "CURL_END"

# Get individual user (no pagination)
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456"
echo "CURL_END"

# Get individual user with pagination params
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456?page=2&pageSize=10 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456?page=2&pageSize=10\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456?page=2&pageSize=10"
echo "CURL_END"

# ========== Sorting Tests (curl_generation) ==========
# Get user list sorted by username ascending
echo "=== GET http://localhost:5500/api/user?sort=username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=username\n" -X GET "http://localhost:5500/api/user?sort=username"
echo "CURL_END"

# Get user list sorted by username descending
echo "=== GET http://localhost:5500/api/user?sort=-username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-username\n" -X GET "http://localhost:5500/api/user?sort=-username"
echo "CURL_END"

# Get user list sorted by createdAt ascending
echo "=== GET http://localhost:5500/api/user?sort=createdAt ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=createdAt\n" -X GET "http://localhost:5500/api/user?sort=createdAt"
echo "CURL_END"

# Get user list sorted by createdAt descending
echo "=== GET http://localhost:5500/api/user?sort=-createdAt ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-createdAt\n" -X GET "http://localhost:5500/api/user?sort=-createdAt"
echo "CURL_END"

# Get user list sorted by firstName ascending
echo "=== GET http://localhost:5500/api/user?sort=firstName ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=firstName\n" -X GET "http://localhost:5500/api/user?sort=firstName"
echo "CURL_END"

# Get user list sorted by firstName descending
echo "=== GET http://localhost:5500/api/user?sort=-firstName ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-firstName\n" -X GET "http://localhost:5500/api/user?sort=-firstName"
echo "CURL_END"

# Get user list sorted by firstName then username
echo "=== GET http://localhost:5500/api/user?sort=firstName,username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=firstName,username\n" -X GET "http://localhost:5500/api/user?sort=firstName,username"
echo "CURL_END"

# Get user list sorted by firstName desc then username asc
echo "=== GET http://localhost:5500/api/user?sort=-firstName,username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-firstName,username\n" -X GET "http://localhost:5500/api/user?sort=-firstName,username"
echo "CURL_END"

# Get user list sorted by firstName asc then username desc
echo "=== GET http://localhost:5500/api/user?sort=firstName,-username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=firstName,-username\n" -X GET "http://localhost:5500/api/user?sort=firstName,-username"
echo "CURL_END"

# Get user list sorted by firstName desc then username desc
echo "=== GET http://localhost:5500/api/user?sort=-firstName,-username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-firstName,-username\n" -X GET "http://localhost:5500/api/user?sort=-firstName,-username"
echo "CURL_END"

# Get user list sorted by three fields
echo "=== GET http://localhost:5500/api/user?sort=createdAt,firstName,username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=createdAt,firstName,username\n" -X GET "http://localhost:5500/api/user?sort=createdAt,firstName,username"
echo "CURL_END"

# Get user list sorted by firstName with pagination
echo "=== GET http://localhost:5500/api/user?sort=firstName&pageSize=3 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=firstName&pageSize=3\n" -X GET "http://localhost:5500/api/user?sort=firstName&pageSize=3"
echo "CURL_END"

# Get user list sorted by createdAt desc with pagination
echo "=== GET http://localhost:5500/api/user?sort=-createdAt&page=2&pageSize=5 ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-createdAt&page=2&pageSize=5\n" -X GET "http://localhost:5500/api/user?sort=-createdAt&page=2&pageSize=5"
echo "CURL_END"

# Get user list with invalid sort field
echo "=== GET http://localhost:5500/api/user?sort=nonexistentfield ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=nonexistentfield\n" -X GET "http://localhost:5500/api/user?sort=nonexistentfield"
echo "CURL_END"

# Get user list with empty sort parameter
echo "=== GET http://localhost:5500/api/user?sort= ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=\n" -X GET "http://localhost:5500/api/user?sort="
echo "CURL_END"

# Get user list with malformed sort parameter
echo "=== GET http://localhost:5500/api/user?sort=- ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user?sort=-\n" -X GET "http://localhost:5500/api/user?sort=-"
echo "CURL_END"

# Get individual user with sort parameter
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456?sort=username ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456?sort=username\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456?sort=username"
echo "CURL_END"

# Get individual user with complex sort parameter
echo "=== GET http://localhost:5500/api/user/valid_all_user_123456?sort=-createdAt,firstName ==="
curl -s -w "CURL_RESULT|STATUS:%{http_code}|TIME:%{time_total}|URL:http://localhost:5500/api/user/valid_all_user_123456?sort=-createdAt,firstName\n" -X GET "http://localhost:5500/api/user/valid_all_user_123456?sort=-createdAt,firstName"
echo "CURL_END"

